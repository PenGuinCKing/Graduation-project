[uwsgi]
#开启主进程
master = true
#指定uwsgi的工作的进程数
processes = 2
#指定工作的每个进程下的线程数
threads = 2
#指定 django 的项目目录
chdir = /usr/local/myproject/train_ticket
#指定wsgi.py文件的位置
wsgi-file = %(chdir)/train_ticket/wsgi.py
#使用Nginx连接时使用，Django程序所在服务器地址和端口号
#socket = 127.0.0.1:8000
socket = %(chdir)/uwsgi/socket.log
#如果没用 nginx，只想自己启动一个 http 界面，用这个
#http = 0.0.0.0:8000 # 直接作为 web 服务器
#日志文件,需要创建
daemonize = %(chdir)/uwsgi/uwsgi.log
#uwsgi的进程id
pidfile = %(chdir)/uwsgi/uwsgi.pid
#uwsgi的运行状态
stats = %(chdir)/uwsgi/uwsgi.status
#socket权限设置,用于和 nginx 通信
chmod-socket = 777
# 退出时清除环境
vacuum = true
#虚拟环境的绝对路径
home = /usr/local/myproject/myenv
# 内部解析缓冲包的大小
buffer-size = 65536
#静态资源目录
static-map =/static=/usr/local/myproject/train_ticket/static
#http请求缓冲
post-buffering=4096
# 直接作为 web 服务器
http=0.0.0.0:8000


#uwsgi --ini uwsgi.ini             # 启动
#uwsgi --reload uwsgi.pid          # 重启
#uwsgi --stop uwsgi.pid            # 关闭
